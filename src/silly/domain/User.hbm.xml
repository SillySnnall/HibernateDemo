<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

    <class name="silly.domain.User" table="user" schema="shop">
        <id name="uid">
            <column name="uid" sql-type="varchar(50)" length="50"/>
            <!-- generator:主键生成策略.就是每条记录录入时,主键的生成规则.(7个)
					identity : 主键自增.由数据库来维护主键值.录入时不需要指定主键.
					sequence: Oracle中的主键生成策略.
					increment(了解): 主键自增.由hibernate来维护.每次插入前会先查询表中id最大值.+1作为新主键值.
					hilo(了解): 高低位算法.主键自增.由hibernate来维护.开发时不使用.
					native:hilo+sequence+identity 自动三选一策略.
					uuid: 产生随机字符串作为主键. 主键类型必须为string 类型.
					assigned:自然主键生成策略. hibernate不会管理主键值.由开发人员自己录入.
			 -->
            <generator class="native"/>
        </id>
        <property name="username">
            <column name="username" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="password">
            <column name="password" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="name">
            <column name="name" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="email">
            <column name="email" sql-type="varchar(30)" length="30" not-null="true"/>
        </property>
        <property name="telephone">
            <column name="telephone" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="birthday">
            <column name="birthday" sql-type="varchar(20)" length="20" not-null="true"/>
        </property>
        <property name="sex">
            <column name="sex" sql-type="varchar(10)" length="10" not-null="true"/>
        </property>
        <property name="state">
            <column name="state" sql-type="int(11)" not-null="true"/>
        </property>
        <property name="code">
            <column name="code" sql-type="varchar(64)" length="64" not-null="true"/>
        </property>
    </class>
</hibernate-mapping>